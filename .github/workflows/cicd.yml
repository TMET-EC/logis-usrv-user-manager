name: CI/CD Dev

on:
  push:
    branches:
      - release/**
      - feature/**
      - hotfix/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
    steps:
    - name: Variables
      id: Variables
      uses: actions/github-script@v7
      with:
        script: |
          const branchAll = context.ref.split('/')
          //const stage = ( branchAll[2].toLowerCase() == 'release' || branchAll[2].toLowerCase() == 'hotfix') ? 'qa' : 'dev'
          const stage = 'dev'
          core.exportVariable('GITHUB_STAGE', stage)
          core.exportVariable('GITHUB_REPO_NAME',context.payload.repository.name)

    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
        run_install: |
            - recursive: true
              args: [--frozen-lockfile]
            - args: [--global, prettier, typescript, serverless]
 
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.npmrc'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install

    - name: Run tests
      run: pnpm run validate

    - name: Deploy to AWS (Dev)
      if: env.GITHUB_STAGE == 'dev'
      run: |
        pnpm sls deploy --region ${{env.AWS_REGION}} --stage ${{env.GITHUB_STAGE}}
      env:
        STAGE: ${{ env.GITHUB_STAGE }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        SERVERLESS_ACCESS_KEY: ${{secrets.SERVERLESS_ACCESS_KEY}}